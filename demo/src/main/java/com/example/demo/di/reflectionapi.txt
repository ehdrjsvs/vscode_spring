리플렉션은 언제사용할까? import java.lang.reflect
:동적으로 클래스를사용해야할때
:작성시점에는 어떤클래스를 사용해야할지모르지만 런타입시점에서 가져와 실행할때필요함
:스프링이나 개발도구(IDE)에서 동적바인딩을 지원하는부분
intellij 개발도구
스프링프레임워크
컨트롤계층
@Controller -페이지로출력
@RestController - 문자열로 출력(text/plain , application/json)-UI솔리션을위해 제공됨
:정적이란?-컴파일된것
:동적이란?-런타임시를말함
리플렉션에서 가져올수있는정도
class
getConstructors
Method
Field

리플렉션은 실행중에 객체생성,메소드 호출 할수있다
자바도 지원하지만 동적이라는것이다르다
:변경에유리하고 유연하게처리하기위해

Class duckClass= Duck.class;
Duck myDuck = duckClass.newInstance();
Looger logger = LoggerFactory.getLogger(Duck.class); /클래스객체얻기
dasdasbbbdasdaswqedqqbbnnn


String getName() : 클래스의 이름을 리턴한다.
Package getPackage() : 클래스의 패키지 정보를 패키지 클래스 타입으로 리턴한다.
Field[] getFields() : public으로 선언된 변수 목록을 Field 클래스 배열 타입으로 리턴한다.
Field getField(String name) : public으로 선언된 변수를 Field 클래스 타입으로 리턴한다.
Field[] getDeclaredFields() : 해당 클래스에서 정의된 변수 목록을 field 클래스 배열 타입으로 리턴한다.
Field getDeclaredField(String name) : name과 동일한 이름으로 정의된 변수를 Field 클래스 타입으로 리턴한다.
Method[] getMethods() : public으로 선언된 모든 메소드 목록을 Method 클래스 배열 타입으로 리턴한다. 해당 클래스에서 사용 가능한 상속받은 메소드도 포함된다.
Method getMethod(String name, Class... parameterTypes) : 지정된 이름과 매개변수 타입을 갖는 메소드를 Method 클래스 타입으로 리턴한다.
Method[] getDeclaredMethods() : 해당 클래스에서 선언된 모든 메소드 정보를 리턴한다.
Method getDeclaredMethod(String name, Class... parameterTypes) : 지정된 이름과 매개변수 타입을 갖는 해당 클래스에서 선언된 메소드를 Method 클래스 타입으로 리턴한다.
Constructor[] getConstructors() : 해당 클래스에 선언된 모든 public 생성자의 정보를 Constructor 배열 타입으로 리턴한다.
Constructor[] getDeclaredConstructors() : 해당 클래스에서 선언된 모든 생성자의 정보를 Constructor 배열 타입으로 리턴한다.
int getModifiers() : 해당 클래스의 접근자(modifier) 정보를 int 타입으로 리턴한다.
String toString() : 해당 클래스 객체를 문자열로 리턴한다.
출처: https://inpa.tistory.com/entry/JAVA-☕-누구나-쉽게-배우는-Reflection-API-사용법 [Inpa Dev 👨‍💻:티스토리]